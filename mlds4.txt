import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import sklearn.metrics as sm 
from sklearn.cluster import KMeans
from sklearn import datasets

iris=datasets.load_iris()
x=pd.DataFrame(iris.data)
print(x.shape)
x.columns=["sepal_length","sepal_width","petal_length","petal_width"]
y=pd.DataFrame(iris.target)
y.columns=["target"]
plt.figure(figsize=(14,7))
colormap=np.array(["red","lime","black"])
plt.subplot(1,2,1)
plt.scatter(x.sepal_length,x.sepal_width,c=colormap[y.target],s=40)
plt.xlabel("saikumar",c="red")
plt.title("sepal")
plt.subplot(1,2,2)
plt.scatter(x.petal_length,x.petal_width,c=colormap[y.target],s=40)
plt.title("petal")

model=KMeans(n_clusters=3)
model.fit(x)
print("labels",model.labels_)
plt.figure(figsize=(14,7))
plt.subplot(1,2,1)
plt.scatter(x.petal_length,x.petal_width,c=colormap[y.target],s=30)
plt.title("Real Classification",c='g')
plt.subplot(1,2,2)
plt.scatter(x.petal_length,x.petal_width,c=colormap[model.labels_],s=30)
plt.title("KMeans classification",c='g')
print(sm.accuracy_score(y,model.labels_))
sm.confusion_matrix(y,model.labels_)

x

from sklearn.naive_bayes import GaussianNB
clf=GaussianNB()
clf.fit(x,y)
y_cluster_gmm=clf.predict(x)
print(y_cluster_gmm)
plt.figure(figsize=(14,7))
plt.subplot(1,2,1)
plt.scatter(x.petal_length,x.petal_width,c=colormap[y.target],s=40)
plt.title("Real Classification",c="red")
plt.subplot(1,2,2)
plt.scatter(x.petal_length,x.petal_width,c=colormap[y_cluster_gmm],s=40)
plt.title("Navie Bayesian CLassification", c="red")

print(sm.accuracy_score(y,y_cluster_gmm))
sm.confusion_matrix(y,y_cluster_gmm)

a=np.array([ 6,3,5,2])
clf.predict([a])